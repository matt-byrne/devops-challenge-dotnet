steps:
  - task: Cache@2
    inputs:
      key: 'nuget | "$(Agent.OS)" | **/packages.lock.json,!**/bin/**'
      restoreKeys: |
        nuget | "$(Agent.OS)"
      path: $(NUGET_PACKAGES)
    displayName: Cache NuGet packages

  - task: DotNetCoreCLI@2
    displayName: "Restore"
    inputs:
      command: "restore"
      projects: "**/*.sln"
      feedsToUse: "config"
      nugetConfigPath: "NuGet.config"

  - task: DotNetCoreCLI@2
    displayName: "Build"
    inputs:
      command: "build"
      projects: "**/*.csproj"
      arguments: "--configuration $(BuildConfiguration) --no-restore"

  - task: DotNetCoreCLI@2
    displayName: "Run Tests"
    inputs:
      command: "test"
      projects: "tests/**/*.csproj"
      arguments: '--collect "XPlat Code Coverage" /p:threshold=75 /p:CollectCoverage=true /p:ThresholdType=branch'

  - task: DotNetCoreCLI@2
    displayName: Install ReportGenerator tool
    inputs:
      command: custom
      custom: tool
      arguments: "install --configfile NuGet-Tools.Config  --tool-path . dotnet-reportgenerator-globaltool"

  - script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"'
    displayName: Create reports

  - task: PublishCodeCoverageResults@1
    displayName: "Publish code coverage"
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml

  - task: PublishSymbols@2
    displayName: "Publish symbols path"
    inputs:
      SymbolServerType: TeamServices

  - task: PublishBuildArtifacts@1
    displayName: "Publish Infra Template"
    inputs:
      PathtoPublish: "build/infra"
      ArtifactName: "artifacts"
      publishLocation: "Container"